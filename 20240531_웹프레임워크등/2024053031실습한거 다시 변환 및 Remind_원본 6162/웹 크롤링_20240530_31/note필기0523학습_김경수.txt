	질문사항
numpy where 

%time : 너무빠르면 알수없다.  %%timeit  # 속도 테스트 차이
python  아님 jupyter에서만 활용가능한 매직코드

read_csv 받는 방법
해당 csv 후 clipboard()
https://raw.githubusercontent.com/boringariel/scikit-learn/master/Data/CrabAgePrediction.csv

		실습 어제꺼 이어서

t-test

correlation analysis visualization(상관분석)
스택토퍼

상관관계
y는 x라고 상관관계가 있더라도 선두개로 그어져있는 선으로 이어져있다
상관관계가 있다고 한들 의미가 없다.

p밸류가 낮은가?

데이터분류가 선에 바짝 붙어있는가?
>> 기준에 못미치면 사실상 상관관계에 관계가 없다.

	correlation analysis visualization
(major)
피어슨 analysis : 데이터가 정규성을 만족할때 쓰인다. x y 모두 연속형데이터일때 사용.
 but 순위척도(대소비교는있는데 연속형이 아닐경우, rank data), 그래프(데이터)가 정규성을 만족하지 못할때 
스피어만 analysis : 
그외 많음 위에껄 많이 사용함.

대부분 피어슨을 쓰는 이유
1. 모수검정 비모수검정 개념없을때
2. ttest 말할때처럼 r value 비모수검정 유효하지 않게 나올때
put off에 살짝 걸렸을때

비모수데이터를 모수데이터로해도 값이 바뀌지않아 통계검정을해도 비슷하게 나온다.
put off에 살짝 걸쳐있으면 확인할때 모수/비모수 검정을 사용한다.

test 하는것에 업계마다 차이가있음. 에듀테크 / 인문 > Rvalue가 상당히 높아야함

R value , P value
추세선



	Github(깃허브) > 

	라이선스 및 인용에 대한 안내 (문서)

인용 : 
ex) 구글(x)에서 알파카 적용 복사 > 출처확인 중앙일보 > 1차출처 왕준열pd (잘된 인용)
    나무위키(x)에서 알파카 url로 사진이미지만 가져온data (잘못된 인용)
url 어느미디어 다적고 가이드라인까지 다해야 한다.
ai모드, gpt가 만들어낸건 창작물이기 때문에 사용가능

구글 학습(저널)
https://scholar.google.com/scholar

공신력있는 매체에서 인용해야된다

인용은 믿을만한매체에서 ex)논문 etc..
나무위키, 위키피디아(위키백과) 에서는 사용 비추천.

	분석 계열 보고서 공통 양식 (보고서 적기)
https://scholar.google.com/scholar 구글저널에 유명논문 코멘트 똑같이 copy 해보기
ex) 나라장터 업무 보고서

가능하다 된다 (ㅇ)
가능하다고본다 된다고본다 = 불가능하다 어정쩡(x) 

가이드라인 은 참고용으로 본다.

글을 길게적는거보다 짧게 적는게 어렵다.
일상생활에서 사용가능한

@@@기타 정보를 기재해야 할 경우에는 ISO 표준 규격 & 강사님께 여쭤보기

요약 : 요약문만들어서 맨마지막에 작성 
키워드설명 :
서론: 어떤것이 있는가(질문) 그리고 가설

방법 : 워크플로우(workflow) 순서도로 하면 좋다.

결과 : 소제목을 적는 걸 권장한다. ( 제목 소제목 그림 을 많이봄 )

버그리프트 : 알려준 내용대로 시연해야 한다.

- 보고서 기준 제출은 해야된다 -
어떠한문제를 해결했다 (소스코드 보고서에 적지말고 의사코드 순서도로 작성 추천)
깃허브 url copy 추천
소스코드적는건 = 사용자가 알아서 해라 라는것. 즉, 안하는게 좋음

토론 : 내주장(사실), 중성적인 분석결과를 작성.

한줄요약 - 한문단요약 - 본문

데이터출처 명시 중요

멀티코드분석 ex) 4개 box비교plot

그래프그릴때 설명

- 프로젝트project -
기준: 강사님com에서 exe실행이 되야됨 안되면 미
주석 과하다 싶을정도로 적극적으로 적기 back-end쪽은 주석이 많음

파이썬 라이브러리 - 파이썬 웹버전에서 썻음
ex) protly > .company에서사용했고 > 2024

착수보고 정기보고

다하고 결과보고서 , 소스코드

프로젝트와 관련된 요청은 모두 담당자를 통해 진행하도록 함 
클라이언트가 요청한 사항만 가능 멘토만 단독적 요청 불가능 멘토 > 클라이언트 > 거치면 가능.

-------------------------------------------------------------------------------------------------
@@@@@@---- ex)강사님 논문 기준

pvalue = 1 빈도차이가 얼마 안난다.
데이터가 없는 데이터도 맨위컬럼 variable이 있으니 사용한다고 본다.
데이터전처리 없다고 삭제하지말고 내가 나중에라도 사용하냐에 따라 관리

3 4 각 관계가 있는지 없는지 분석 = a  b 그룹의 차이가 잇는지의 t test 관계

boxflot에 t test를 잘사용하지않는다. t test 캔들바플롯(초있는바) 으로 한다.

시각화나 표로 한 데이터는 중글로 다시 보여준다.

약어정리 ex) wish - w~~~i~~s~~h

독자설정을 고려해서 인용을 해야한다.

보고서쓸때
개발못하는사람기준으로 쓴다. - -

라이센스, 인용


완료보고서format > 현업규격
참고 :

	ppt

ppt 발표할때 유의사항
content(목차)읽지말고 본론요약으로 하고 넘어가기 ex) 만든코드 간단하게 이런걸만들었
습니다 하고 바로 본론으로 >> 10min

디자인 - 모던디자인 플렛디자인

발표자료에 줄글로 적지말기 짧은문장만 리스트업 적기 

기획 = pm 부분이지만, 프로그램이랑 하는 프로그래머는 기획능력도 있어야한다.

메뉴구조도는 - 순서도 (필수)

7p~12p 사업범위 _ 홈페이지 세부 구현 내용 - 15년전style > flash 사용안함

동작보전

일정설정 W-Base wbs
	work breakdown structure 작업을 쪼개서 구조화 시키는 방법
데이터수집 > 데이터 전처리 > 분석할 모델 정하고 > 돌려보고 > 결과 검토 > test > 가 완료되면 > 벤치마킹 > 쓸지말지 결정 > 보고서 작성.
에픽 : 더이상 쪼개질것이 없을때까지 작업
프로젝트 설계부분에서 지원 부터~ rmr 업무

시작부터끝

교육지원 (지술지원)

	분석 프로젝트 발표자료 샘플

프로젝트명 목차 별로 다 나와야한다 RMID 역할과 똑같다

P10 - 04프로젝트 수행 결과 처럼 코드 발표자료에 넣지 말기 ( 안좋은 EX )

	착수보고서 작성 시 유의사항

착수보고서 = 개발기획서로 바꾼다.

착수보고서 개념 : 프로젝트 마다 제안요청서를 강사님이 주면 가능 불가능 부분적가능 으로 내가 할당해서 적는다.

분량은 알아서 있어야되는 내용이 없으면 안되고 없는 내용이 있으면 안됨. 부풀리기 안됨.
요약을 꼭 적는다.
페이지 일련번호 적기
조건표 제시.

착수보고서는 pdf, docx, odf 또는 pptx, odp 포맷 형태로의 작성 ( 국제표준기준 ) 
HWP,프레지 (X)

기술지원 > 기술이전 : 사용설명서을적어주는것
내가 팔려고하는 프로덕트(프로그램)

-------------------------------------------------------------------------------------------------

	OpenPyXL
OpenpyXL : excel 파일을 편집하는 pakege  판다스 xrd(사용안함)

	OpenPyXL 패키지
시트이름변경저장 
사진붙여넣기

	버전관리시스템(VERSION COntrol System)
프로그램 변경 있다 없다 있다면 어디 있는지 check하는 프로그램
변경점
백업 복구를 최소한으로 제공하는 것을 목표
백업 321원칙 : 데이터를 백업할때 3copy이상 2개의 별도의 분리된 다른미디어 1개이상의 원격지
ex)강의자료 6copy , 하드,ssd,usb,클라우드, >> 2가지이상 미디어  천재교육,microsoft,home 1개이상의 원격지
버전관리 시스템 관리 : 백업을 여러군데하면 버전이 다르다면, 같은 최신화 버전으로 유지 관리
				동기화설정 and 깃허브는 깃허브레퍼지토리에 항상 변경 (클론으로인한 최신버전)

로컬버전관리시스템(local vcs) : 전달받은파일 내파일 비교 분석하는 시스템
중앙집중식버전관리시스템 : 어떤 개발 프로그램을 편집하면 중앙시스템이 변경점을 체크하고 계산하고 내컴퓨터나 사용자가 받고 주고 해서 조금 번거로움이 있다.

분산버전관리시스템(DVCS) : 각자의 데이터를 편집하고 업로드 하면 중앙서버가 모든 변경점을 적용을한다 A는 계속 서버 컴퓨터에 올려서 데이터가 쌓인다. 
ex) 깃허브 GitHub

	깃(Git)
대표적인 분산 버전 관리 시스템 (DVCS)
= 리눅스 만든사람이랑 같음
VCS 중 빠른속도에 속하지만 실제로는 빠르진않다. 
EX)레퍼지토리 클론 15초정도.

COMMIT : 버전관리한 프로젝트 - 로컬복사(클론) - 레코지토리 서버에 전송하려고하면
저장소
PUSH 변경사항을 다른곳에서 집어 넣는다
PULL  변경사항을 다른곳으로 밀어 넣는다
내가 변경한내용을 레퍼지토리에 전달할려고하는건
프렌치 : 어떤 프로젝트를 가지치는 것 
MERGE : A B안을 제안중 A안이 좋으면 
복제(Fork) : 어떤 저장소의 계정을 내저장소로 독립적으로 복제하는 기능


	깃허브(GitHub)

오픈소스을 좋아하는 사람들이 프로그램코드등을 한쪽 서버로 몰아 넣고 싶을때 만든 것이 계기가됨
마이크로소프트의 깃 저장소

Git파일을 공유하는 Site

GitHubPage는 유하다
ex)chatgpt  GitHub Cofill ~~ 좋다

	깃허브 데스크탑(GitHub Desktop)
아쉬운점 : 리눅스 지원암함

	깃랩(GitLab)
프라이빗저장소를 무제한 무료로 사용가능하다.
공개저장소와 / 비공개저장소는 제한이 많다 가격이 있다.
GitLab EE
개인이던 기업이던 GITHUB를 더 많이 사용한다.

	가상환경 사용하기
내컴퓨터는 되는데 다른컴퓨터는 사용이 안될때
해결방법 : 가상환경
내 컴퓨터에는 가상환경을 하나만 설정할수 있다.
패키지는 한버전에 한가지만 사용할 수 있다.
가상환경이란 Python를 여러가지에 사용할수 있는 환경 하지만 독립된 환경에서 사용 가능
	운영체제에서 하이퍼v 윈도우10 등 
	가상환경 안에 가상환경을 사용
	doker도커 라는 가상환경 사용

conda (condain inbayment) 가상환경

venv (vertural env)
abc폴더안에 스크랩블 abc 스크램블
기본 가상환경 abc가상환경은 서로 다른 가상환경 사용가능

참고자료
python/lecture/파이썬 프로젝트 관리를 위한 Conda 가상환경 만들기.ipynb

기본환경 (base) 
가상환경 (ABC)
conda env list == 가상환경list 보기

	데이터베이스(DB)
DB 
DBMS 관계형 비관계형이 있다.

DB의3요소 무결성, 가용성, 기밀성
A데이터를 B라고 바꿨을때 다른사람이 A데이터를 조회하고 C데이터를 저장하면 혼용.
동시접속 동시편집하기 위해 DB를 만들었다.
ex) 우유 > 데이터를 잘접속 아니면 시스템을 잘 구축해야한다.

무결성 : 중복값이 있으면 오류가 있는 데이터
ex) 주민등록번호

가용성 : 권한이 있는 사용자가 접근허용
ex) 군입대한사람이 입영통지서 받으면 안되는 경우

기밀성 : 권한이 없는 사용자 접근불허
ex) 신검할때 그냥 검사만 하는 사람(정상/비정상 체크할경우) 주민등록번호 필요없을 경우

우리나라의 사람들의 정보는 DB로 정리되어 있다.

	관계형 데이터베이스 관리 시스템(RDBMS)
SQL 언어를 사용하는 DB
ex) 이름 주민등록번호 성별 한줄로 보여지는 데이터

주요 밴더 : Oracle SQL 제일큰SQL밴더
유료밴더 : 기술지원이 비싸다 EX) Oracle , Mssql, ProstgreSQL

최대한많은범위 적용하는 특성 EX) 파이썬은 숫자만 1

사용한 후 비교해보고 확인뒤 저장
인플레이스 함수가 아니다 ( 저장이 안됨 )
SAVE가 아니고 COMMIT를 해야됨.

	NoSQL(Not only SQL)

EX) ABC라는 건물이 있으면 ABC는 무슨듯인지 물어보면 비즈니스건물이라고 말하는 개발자의 센스

SQL만을 사용하지 않는 DB
*RDBMS와 반대되는 개념도 있지만 개념이 아닐수도 있다. 절대적으로 아닌건 아님.

RDBMS 보다 NoSQL이 빠르다.

--천재교육에선 RDBMS(MariaDB) NoSQL(MongoDB) 사용
다른걸 써도 알아 볼수는 있다.

PIEmySQL, CSOracle


















































